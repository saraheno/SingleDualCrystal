# Use this open statement to create an OpenGL view:
#/vis/open OGL 2400x600-0+0
/vis/open OGLIX


# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
#/vis/verbose errors


# Draw geometry:
/vis/drawVolume

# Specify view angle:
# from above
#/vis/viewer/set/upVector 0 0 1
#/vis/viewer/set/viewpointThetaPhi 90 90 deg
#from the front
#/vis/viewer/set/upVector 0 1 0
#/vis/viewer/set/viewpointThetaPhi 180 0 deg 
# from the back
#/vis/viewer/set/upVector 0 1 0
#/vis/viewer/set/viewpointThetaPhi 0 0 deg 
# from the side
/vis/viewer/set/upVector 0 1 0
/vis/viewer/set/viewpointThetaPhi 270 0 deg 


# Specify zoom value:
#/vis/viewer/zoomTo 35

# specify center point
#/vis/viewer/dolly 
#/vis/viewer/pan 0 100 cm

# Specify style (surface or wireframe):
/vis/viewer/set/style wireframe
#/vis/viewer/set/style surface
/vis/viewer/set/background white

# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 10 cm
/vis/scene/add/axes 0 0 0


# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
#/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
#/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
/vis/scene/add/hits
#
# To draw only specific particles:
/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add geantino
/vis/filtering/trajectories/particleFilter-0/add pi-
/vis/filtering/trajectories/particleFilter-0/add e-
/vis/filtering/trajectories/particleFilter-0/add e+
/vis/filtering/trajectories/particleFilter-0/add opticalphoton
/vis/filtering/trajectories/particleFilter-0/add mu-
/vis/filtering/trajectories/particleFilter-0/add gamma
/vis/filtering/trajectories/particleFilter-0/add neutron

#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/set geantino red
/vis/modeling/trajectories/drawByParticleID-0/set e- red
/vis/modeling/trajectories/drawByParticleID-0/set pi- brown
/vis/modeling/trajectories/drawByParticleID-0/set mu- blue
/vis/modeling/trajectories/drawByParticleID-0/set mu+ blue
/vis/modeling/trajectories/drawByParticleID-0/set gamma yellow
/vis/modeling/trajectories/drawByParticleID-0/set opticalphoton black
/vis/modeling/trajectories/drawByParticleID-0/set neutron orange
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate 1
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
#/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
/vis/viewer/flush

/units/list



#/tracking/verbose 1


